// <auto-generated />
using System;
using Gemilang.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gemilang.Migrations
{
    [DbContext(typeof(GemilangDbContext))]
    partial class GemilangDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Gemilang.Models.DataPengajaran", b =>
                {
                    b.Property<int>("IdGuru")
                        .HasColumnType("int");

                    b.Property<int>("IdTupleMataPelajaranKelas")
                        .HasColumnType("int");

                    b.HasKey("IdGuru", "IdTupleMataPelajaranKelas");

                    b.HasIndex("IdTupleMataPelajaranKelas");

                    b.ToTable("data_pengajaran", (string)null);
                });

            modelBuilder.Entity("Gemilang.Models.Kelas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nama")
                        .IsUnique();

                    b.ToTable("Kelas");
                });

            modelBuilder.Entity("Gemilang.Models.MataPelajaran", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nama")
                        .IsUnique();

                    b.ToTable("mata_pelajaran", (string)null);
                });

            modelBuilder.Entity("Gemilang.Models.NilaiSiswa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdSiswa")
                        .HasColumnType("int");

                    b.Property<int>("IdTopik")
                        .HasColumnType("int");

                    b.Property<byte>("Nilai")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("IdTopik");

                    b.HasIndex("IdSiswa", "IdTopik")
                        .IsUnique();

                    b.ToTable("nilai_siswa", (string)null);
                });

            modelBuilder.Entity("Gemilang.Models.Topik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdTupleMataPelajaranKelas")
                        .HasColumnType("int");

                    b.Property<int?>("MataPelajaranId")
                        .HasColumnType("int");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdTupleMataPelajaranKelas");

                    b.HasIndex("MataPelajaranId");

                    b.HasIndex("Nama")
                        .IsUnique();

                    b.ToTable("topik", (string)null);
                });

            modelBuilder.Entity("Gemilang.Models.TupleMataPelajaranKelas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdKelas")
                        .HasColumnType("int");

                    b.Property<int>("IdMataPelajaran")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdKelas");

                    b.HasIndex("IdMataPelajaran", "IdKelas")
                        .IsUnique();

                    b.ToTable("mata_pelajaran_kelas", (string)null);
                });

            modelBuilder.Entity("Gemilang.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("CHAR(64)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("user", (string)null);

                    b.UseTptMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            Password = "8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918",
                            Role = "admin",
                            Username = "Admin"
                        });
                });

            modelBuilder.Entity("Gemilang.Models.Guru", b =>
                {
                    b.HasBaseType("Gemilang.Models.User");

                    b.ToTable("guru", (string)null);
                });

            modelBuilder.Entity("Gemilang.Models.Siswa", b =>
                {
                    b.HasBaseType("Gemilang.Models.User");

                    b.Property<int>("IdKelas")
                        .HasColumnType("int");

                    b.HasIndex("IdKelas");

                    b.ToTable("siswa", (string)null);
                });

            modelBuilder.Entity("Gemilang.Models.DataPengajaran", b =>
                {
                    b.HasOne("Gemilang.Models.Guru", "Guru")
                        .WithMany("ListDataPengajaran")
                        .HasForeignKey("IdGuru")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gemilang.Models.TupleMataPelajaranKelas", "TupleMataPelajaranKelas")
                        .WithMany("ListDataPengajaran")
                        .HasForeignKey("IdTupleMataPelajaranKelas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guru");

                    b.Navigation("TupleMataPelajaranKelas");
                });

            modelBuilder.Entity("Gemilang.Models.NilaiSiswa", b =>
                {
                    b.HasOne("Gemilang.Models.Siswa", "Siswa")
                        .WithMany("ListNilaiSiswa")
                        .HasForeignKey("IdSiswa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gemilang.Models.Topik", "Topik")
                        .WithMany("ListNilaiSiswa")
                        .HasForeignKey("IdTopik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Siswa");

                    b.Navigation("Topik");
                });

            modelBuilder.Entity("Gemilang.Models.Topik", b =>
                {
                    b.HasOne("Gemilang.Models.TupleMataPelajaranKelas", "TupleMataPelajaranKelas")
                        .WithMany("ListTopik")
                        .HasForeignKey("IdTupleMataPelajaranKelas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gemilang.Models.MataPelajaran", null)
                        .WithMany("ListTopik")
                        .HasForeignKey("MataPelajaranId");

                    b.Navigation("TupleMataPelajaranKelas");
                });

            modelBuilder.Entity("Gemilang.Models.TupleMataPelajaranKelas", b =>
                {
                    b.HasOne("Gemilang.Models.Kelas", "Kelas")
                        .WithMany("ListTupleMataPelajaranKelas")
                        .HasForeignKey("IdKelas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gemilang.Models.MataPelajaran", "MataPelajaran")
                        .WithMany("ListTupleMataPelajaranKelas")
                        .HasForeignKey("IdMataPelajaran")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kelas");

                    b.Navigation("MataPelajaran");
                });

            modelBuilder.Entity("Gemilang.Models.Guru", b =>
                {
                    b.HasOne("Gemilang.Models.User", null)
                        .WithOne()
                        .HasForeignKey("Gemilang.Models.Guru", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gemilang.Models.Siswa", b =>
                {
                    b.HasOne("Gemilang.Models.User", null)
                        .WithOne()
                        .HasForeignKey("Gemilang.Models.Siswa", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gemilang.Models.Kelas", "Kelas")
                        .WithMany("ListSiswa")
                        .HasForeignKey("IdKelas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kelas");
                });

            modelBuilder.Entity("Gemilang.Models.Kelas", b =>
                {
                    b.Navigation("ListSiswa");

                    b.Navigation("ListTupleMataPelajaranKelas");
                });

            modelBuilder.Entity("Gemilang.Models.MataPelajaran", b =>
                {
                    b.Navigation("ListTopik");

                    b.Navigation("ListTupleMataPelajaranKelas");
                });

            modelBuilder.Entity("Gemilang.Models.Topik", b =>
                {
                    b.Navigation("ListNilaiSiswa");
                });

            modelBuilder.Entity("Gemilang.Models.TupleMataPelajaranKelas", b =>
                {
                    b.Navigation("ListDataPengajaran");

                    b.Navigation("ListTopik");
                });

            modelBuilder.Entity("Gemilang.Models.Guru", b =>
                {
                    b.Navigation("ListDataPengajaran");
                });

            modelBuilder.Entity("Gemilang.Models.Siswa", b =>
                {
                    b.Navigation("ListNilaiSiswa");
                });
#pragma warning restore 612, 618
        }
    }
}
